{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","useState","time","active","start","timer","setTimer","console","log","intervalRef","useRef","className","seconds","moment","duration","hours","Math","floor","asHours","utc","format","convertTime","type","onClick","prev","timeCounter","setInterval","current","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAOaA,G,MAAM,WAAO,IAAD,EACGC,mBAAS,CACjCC,KAAM,EACNC,QAAQ,EACRC,MAAO,IAJc,mBAChBC,EADgB,KACTC,EADS,KAOvBC,QAAQC,IAAIH,GAEZ,IAAMI,EAAcC,mBA+CpB,OACE,sBAAKC,UAAU,QAAf,UACE,8CAXgB,WAClB,IAAMC,EAAUC,IAAOC,SAAST,EAAMH,KAAM,gBACtCa,EAASC,KAAKC,MAAML,EAAQM,WAAa,GAAjC,WACNF,KAAKC,MAAML,EAAQM,YACvBF,KAAKC,MAAML,EAAQM,WAEvB,MAAM,GAAN,OAAUH,EAAV,YAAmBF,IAAOM,IAAId,EAAMH,MAAMkB,OAAO,UAMlCC,OAGXhB,EAAMF,QAEN,wBACEmB,KAAK,SACLC,QAvDW,WACjBhB,QAAQC,IAAI,gBACZF,GAAS,SAAAkB,GAAI,kCACRA,GADQ,IAEXpB,MAAOS,MAAWW,EAAKtB,UAGzB,IAAMuB,EAAcC,aAAY,WAC9BpB,GAAS,SAAAkB,GAAI,kCACRA,GADQ,IAEXtB,KAAMW,MAAWW,EAAKpB,MACtBD,QAAQ,SAET,KAEHM,EAAYkB,QAAUF,GAsClB,mBAQDpB,EAAMF,QAEL,wBACEmB,KAAK,SACLC,QA/CU,WAChBhB,QAAQC,IAAI,eACZoB,cAAcnB,EAAYkB,SAC1BrB,GAAS,SAAAkB,GAAI,kCACRA,GADQ,IAEXrB,QAAQ,QAwCN,mBAQF,wBACEmB,KAAK,SACLC,QA9Cc,WAClBhB,QAAQC,IAAI,iBACZF,GAAS,SAAAkB,GAAI,kCACRA,GADQ,IAEXtB,KAAM,EACNC,QAAQ,QAuCR,yBCpFN0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.43a9f1d6.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-console */\nimport React, { useRef, useState } from 'react';\nimport moment from 'moment';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [timer, setTimer] = useState({\n    time: 0,\n    active: false,\n    start: 0,\n  });\n\n  console.log(timer);\n\n  const intervalRef = useRef();\n\n  const startTimer = () => {\n    console.log('start button');\n    setTimer(prev => ({\n      ...prev,\n      start: moment() - prev.time,\n    }));\n\n    const timeCounter = setInterval(() => {\n      setTimer(prev => ({\n        ...prev,\n        time: moment() - prev.start,\n        active: true,\n      }));\n    }, 1000);\n\n    intervalRef.current = timeCounter;\n  };\n\n  const stopTimer = () => {\n    console.log('stop button');\n    clearInterval(intervalRef.current);\n    setTimer(prev => ({\n      ...prev,\n      active: false,\n    }));\n  };\n\n  const deleteTimer = () => {\n    console.log('delete button');\n    setTimer(prev => ({\n      ...prev,\n      time: 0,\n      active: false,\n    }));\n  };\n\n  const convertTime = () => {\n    const seconds = moment.duration(timer.time, 'milliseconds');\n    const hours = (Math.floor(seconds.asHours()) < 10)\n      ? `0${Math.floor(seconds.asHours())}`\n      : Math.floor(seconds.asHours());\n\n    return `${hours}:${moment.utc(timer.time).format('mm:ss')}`;\n  };\n\n  return (\n    <div className=\"timer\">\n      <h3>\n        {`TIMER: ${convertTime()}`}\n      </h3>\n\n      {!timer.active\n      && (\n        <button\n          type=\"button\"\n          onClick={startTimer}\n        >\n          start\n        </button>\n      )}\n\n      {timer.active\n      && (\n        <button\n          type=\"button\"\n          onClick={stopTimer}\n        >\n          pause\n        </button>\n      )}\n\n      <button\n        type=\"button\"\n        onClick={deleteTimer}\n      >\n        delete\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}