{"version":3,"sources":["components/localStorage.js","store/index.js","style/icons/pause_circle_outline-black-48dp.svg","style/icons/play_circle_outline-black-48dp.svg","style/icons/highlight_off-black-48dp.svg","components/timer.jsx","style/icons/play_circle_filled-black-48dp.svg","App.jsx","index.jsx"],"names":["loadedState","initialValue","localStorage","getItem","JSON","parse","setItem","stringify","timersList","inputTimerName","ACTION_TYPES","selectTimers","state","selectName","store","createStore","action","type","payload","Timer","timerName","id","deleteTimer","time","active","start","moment","useState","timer","setTimer","intervalRef","useRef","updateStorage","useCallback","key","udpadeTimer","startTimer","prev","timeCounter","setInterval","current","useEffect","clearInterval","removeItem","classContainer","className","seconds","duration","hours","Math","floor","asHours","utc","format","convertTime","onClick","src","playPic","alt","pausePic","deletePic","App","useSelector","dispatch","useDispatch","setTimersList","setInputTimerName","val","handleName","event","target","value","addNewTimer","newTimer","String","deleteIndex","findIndex","timerObj","newList","splice","placeholder","onChange","onKeyPress","addPic","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c81ece2.chunk.js","sourcesContent":["export const loadedState = (() => {\n  const initialValue = localStorage.getItem('timersList')\n    ? JSON.parse(localStorage.getItem('timersList'))\n    : [];\n\n  localStorage.setItem('timersList', JSON.stringify(initialValue));\n\n  return {\n    timersList: initialValue,\n    inputTimerName: '',\n  };\n})();\n","import { createStore } from 'redux';\nimport { loadedState } from '../components/localStorage';\n// import { initialState } from './initialState';\n\nconst ACTION_TYPES = {\n  ADD_TIMER: 'App::setTimersList',\n  HANDLE_NAME: 'App::setTimerName',\n};\n\n// action creator\nexport const addTimer = timerData => ({\n  type: ACTION_TYPES.ADD_TIMER,\n  payload: timerData,\n});\n\nexport const addName = value => ({\n  type: ACTION_TYPES.HANDLE_NAME,\n  payload: value,\n});\n\n// selector\nexport const selectTimers = state => state.timersList;\nexport const selectName = state => state.inputTimerName;\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_TIMER: {\n      localStorage.setItem('timersList', JSON.stringify(action.payload));\n\n      return {\n        ...state,\n        timersList: action.payload,\n      };\n    }\n\n    case ACTION_TYPES.HANDLE_NAME: {\n      return {\n        ...state,\n        inputTimerName: action.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const store = createStore(rootReducer, loadedState);\n","export default __webpack_public_path__ + \"static/media/pause_circle_outline-black-48dp.e697da1d.svg\";","export default __webpack_public_path__ + \"static/media/play_circle_outline-black-48dp.b3cc66f0.svg\";","export default __webpack_public_path__ + \"static/media/highlight_off-black-48dp.e8247fa8.svg\";","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nimport pausePic from '../style/icons/pause_circle_outline-black-48dp.svg';\nimport playPic from '../style/icons/play_circle_outline-black-48dp.svg';\nimport deletePic from '../style/icons/highlight_off-black-48dp.svg';\n\nimport './timer.scss';\n\nexport const Timer = ({\n  timerName,\n  id,\n  deleteTimer,\n}) => {\n  // if timer excist we take the data from local storage\n  // if no setting the new object\n\n  const initialValue = localStorage.getItem(`${id}`)\n    ? JSON.parse(localStorage.getItem(`${id}`))\n    : {\n      timerName,\n      time: 0,\n      active: true,\n      start: +moment(),\n      id,\n    };\n\n  const [timer, setTimer] = useState(initialValue);\n\n  // for ability to clear Interval\n  const intervalRef = useRef();\n\n  // updating localStorage when timer buttons play/pause onClick\n  const updateStorage = useCallback((key) => {\n    const udpadeTimer = { ...timer };\n\n    (key === 'play') ? udpadeTimer.active = true : udpadeTimer.active = false;\n\n    localStorage.setItem(`${id}`, JSON.stringify(udpadeTimer));\n  }, [timer]);\n\n  const startTimer = () => {\n    setTimer((prev) => {\n      if (prev.active) {\n        return {\n          ...prev,\n          time: moment() - prev.start,\n        };\n      }\n\n      return {\n        ...prev,\n        start: moment() - prev.time,\n        active: true,\n      };\n    });\n\n    updateStorage('play');\n\n    const timeCounter = setInterval(() => {\n      setTimer(prev => ({\n        ...prev,\n        time: moment() - prev.start,\n      }));\n    }, 1000);\n\n    intervalRef.current = timeCounter;\n  };\n\n  // for launching timer after creation and first render\n  useEffect(() => {\n    if (timer.active) {\n      startTimer();\n    }\n\n    // for cancel the timer (setTimer) when component deleted and unmounted\n    return function cleanup() {\n      clearInterval(intervalRef.current);\n      localStorage.removeItem(`${id}`, JSON.stringify(timer));\n    };\n  }, []);\n\n  const stopTimer = () => {\n    clearInterval(intervalRef.current);\n    setTimer(prev => ({\n      ...prev,\n      active: false,\n    }));\n\n    updateStorage('pause');\n  };\n\n  // converting time to show more than 24 hours\n  const convertTime = () => {\n    const seconds = moment.duration(timer.time, 'milliseconds');\n    const hours = (Math.floor(seconds.asHours()) < 10)\n      ? `0${Math.floor(seconds.asHours())}`\n      : Math.floor(seconds.asHours());\n\n    return `${hours}:${moment.utc(timer.time).format('mm:ss')}`;\n  };\n\n  // setting active/paused class for timer\n  const classContainer = (timer.active)\n    ? 'timer__container active'\n    : 'timer__container';\n\n  return (\n    <div className={classContainer}>\n      <h3 className=\"timer__header\">\n        <span className=\"timer__title\">{timer.timerName}</span>\n        <span>{convertTime()}</span>\n      </h3>\n\n      {!timer.active\n      && (\n        <button\n          className=\"timer__button\"\n          type=\"button\"\n          onClick={startTimer}\n        >\n          <img\n            className=\"timer__image\"\n            src={playPic}\n            alt=\"start\"\n          />\n        </button>\n      )}\n\n      {timer.active\n      && (\n        <button\n          className=\"timer__button\"\n          type=\"button\"\n          onClick={stopTimer}\n        >\n          <img\n            className=\"timer__image\"\n            src={pausePic}\n            alt=\"pause\"\n          />\n        </button>\n      )}\n\n      <button\n        className=\"timer__button\"\n        type=\"button\"\n        onClick={() => deleteTimer(id)}\n      >\n        <img src={deletePic} alt=\"delete\" />\n      </button>\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  timerName: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  deleteTimer: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/play_circle_filled-black-48dp.e67596b2.svg\";","import React, { useCallback } from 'react';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Timer } from './components/timer';\nimport { selectTimers, addTimer, selectName, addName } from './store/index';\nimport addPic from './style/icons/play_circle_filled-black-48dp.svg';\nimport './App.scss';\n\nexport const App = () => {\n  const timersList = useSelector(selectTimers);\n  const inputTimerName = useSelector(selectName);\n  const dispatch = useDispatch();\n\n  const setTimersList = useCallback((timer) => {\n    dispatch(addTimer(timer));\n  }, [dispatch]);\n\n  const setInputTimerName = useCallback((val) => {\n    dispatch(addName(val));\n  }, [dispatch]);\n\n  const handleName = useCallback((event) => {\n    setInputTimerName(event.target.value);\n  }, [setInputTimerName]);\n\n  const addNewTimer = () => {\n    const newTimer = {\n      timerName: inputTimerName || String(+moment()),\n      id: +moment(),\n    };\n\n    setTimersList([newTimer, ...timersList]);\n    setInputTimerName('');\n  };\n\n  const deleteTimer = (id) => {\n    const deleteIndex = timersList.findIndex(timerObj => timerObj.id === id);\n    const newList = [...timersList];\n\n    newList.splice(deleteIndex, 1);\n\n    setTimersList(newList);\n  };\n\n  const onEnter = (event) => {\n    if (event.key === 'Enter') {\n      addNewTimer();\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"timer\">\n        <div className=\"timer__set\">\n          <input\n            className=\"timer__name\"\n            type=\"text\"\n            placeholder=\"Enter tracker name\"\n            value={inputTimerName}\n            onChange={handleName}\n            onKeyPress={onEnter}\n          />\n          <button\n            className=\"timer__add\"\n            type=\"button\"\n            onClick={addNewTimer}\n          >\n            <img src={addPic} alt=\"add timer\" />\n          </button>\n        </div>\n\n        {timersList.map((timerObj) => {\n          const {\n            timerName,\n            id,\n          } = timerObj;\n\n          return (\n            <Timer\n              timerName={timerName}\n              id={id}\n              deleteTimer={deleteTimer}\n              key={id}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { store } from './store/index';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}