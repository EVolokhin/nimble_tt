{"version":3,"sources":["style/icons/pause_circle_outline-black-48dp.svg","style/icons/play_circle_outline-black-48dp.svg","style/icons/highlight_off-black-48dp.svg","components/timer.jsx","style/icons/play_circle_filled-black-48dp.svg","App.jsx","components/localStorage.js","index.jsx"],"names":["Timer","name","id","deleteTimer","initialValue","localStorage","getItem","JSON","parse","time","active","start","moment","useState","timer","setTimer","intervalRef","useRef","updateStorage","key","udpadeTimer","setItem","stringify","startTimer","prev","timeCounter","setInterval","current","useEffect","clearInterval","removeItem","className","seconds","duration","hours","Math","floor","asHours","utc","format","convertTime","type","onClick","src","playPic","alt","pausePic","deletePic","App","value","setValue","newValue","useLocalStorage","timersList","setTimersList","inputTimerName","setInputTimerName","addTimer","newTimer","String","deleteIndex","findIndex","timerObj","newList","splice","placeholder","onChange","event","target","onKeyPress","addPic","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d14395f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause_circle_outline-black-48dp.7a13eaea.svg\";","export default __webpack_public_path__ + \"static/media/play_circle_outline-black-48dp.9a7adb4d.svg\";","export default __webpack_public_path__ + \"static/media/highlight_off-black-48dp.cd9434e4.svg\";","import React, { useEffect, useRef, useState } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nimport pausePic from '../style/icons/pause_circle_outline-black-48dp.svg';\nimport playPic from '../style/icons/play_circle_outline-black-48dp.svg';\nimport deletePic from '../style/icons/highlight_off-black-48dp.svg';\n\nimport './timer.scss';\n\nexport const Timer = ({\n  name,\n  id,\n  deleteTimer,\n}) => {\n  // if timer excist we take the data from local storage\n  // if no setting the new object\n\n  const initialValue = localStorage.getItem(`${id}`)\n    ? JSON.parse(localStorage.getItem(`${id}`))\n    : {\n      name,\n      time: 0,\n      active: true,\n      start: +moment(),\n      id,\n    };\n\n  const [timer, setTimer] = useState(initialValue);\n\n  // for ability to clear Interval\n  const intervalRef = useRef();\n\n  // updating localStorage when timer buttons play/pause onClick\n  const updateStorage = (key) => {\n    const udpadeTimer = { ...timer };\n\n    (key === 'play') ? udpadeTimer.active = true : udpadeTimer.active = false;\n\n    localStorage.setItem(`${id}`, JSON.stringify(udpadeTimer));\n  };\n\n  const startTimer = () => {\n    setTimer((prev) => {\n      if (prev.active) {\n        return {\n          ...prev,\n          time: moment() - prev.start,\n        };\n      }\n\n      return {\n        ...prev,\n        start: moment() - prev.time,\n        active: true,\n      };\n    });\n\n    updateStorage('play');\n\n    const timeCounter = setInterval(() => {\n      setTimer(prev => ({\n        ...prev,\n        time: moment() - prev.start,\n      }));\n    }, 1000);\n\n    intervalRef.current = timeCounter;\n  };\n\n  // for launching timer after creation and first render\n  useEffect(() => {\n    if (timer.active) {\n      startTimer();\n    }\n\n    // for cancel the timer (setTimer) when component deleted and unmounted\n    return function cleanup() {\n      clearInterval(intervalRef.current);\n      localStorage.removeItem(`${id}`, JSON.stringify(timer));\n    };\n  }, []);\n\n  const stopTimer = () => {\n    clearInterval(intervalRef.current);\n    setTimer(prev => ({\n      ...prev,\n      active: false,\n    }));\n\n    updateStorage('pause');\n  };\n\n  // converting time to show more than 24 hours\n  const convertTime = () => {\n    const seconds = moment.duration(timer.time, 'milliseconds');\n    const hours = (Math.floor(seconds.asHours()) < 10)\n      ? `0${Math.floor(seconds.asHours())}`\n      : Math.floor(seconds.asHours());\n\n    return `${hours}:${moment.utc(timer.time).format('mm:ss')}`;\n  };\n\n  return (\n    <div className=\"timer__container\">\n      <h3 className=\"timer__header\">\n        {`${timer.name}: ${convertTime()}`}\n      </h3>\n\n      {!timer.active\n      && (\n        <button\n          className=\"timer__button\"\n          type=\"button\"\n          onClick={startTimer}\n        >\n          <img\n            className=\"timer__image\"\n            src={playPic}\n            alt=\"start\"\n          />\n        </button>\n      )}\n\n      {timer.active\n      && (\n        <button\n          className=\"timer__button\"\n          type=\"button\"\n          onClick={stopTimer}\n        >\n          <img\n            className=\"timer__image\"\n            src={pausePic}\n            alt=\"pause\"\n          />\n        </button>\n      )}\n\n      <button\n        className=\"timer__button\"\n        type=\"button\"\n        onClick={() => deleteTimer(id)}\n      >\n        <img src={deletePic} alt=\"delete\" />\n      </button>\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  deleteTimer: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/play_circle_filled-black-48dp.60afd989.svg\";","/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n/* eslint-disable max-len */\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { Timer } from './components/timer';\nimport addPic from './style/icons/play_circle_filled-black-48dp.svg';\nimport { useLocalStorage } from './components/localStorage';\nimport './App.scss';\n\nexport const App = () => {\n  const [timersList, setTimersList] = useLocalStorage('timersList');\n  const [inputTimerName, setInputTimerName] = useState('');\n\n  const handleName = (event) => {\n    setInputTimerName(event.target.value);\n  };\n\n  const addTimer = () => {\n    const newTimer = {\n      name: inputTimerName || String(+moment()),\n      id: +moment(),\n    };\n\n    setTimersList([newTimer, ...timersList]);\n    setInputTimerName('');\n  };\n\n  const deleteTimer = (id) => {\n    const deleteIndex = timersList.findIndex(timerObj => timerObj.id === id);\n    const newList = [...timersList];\n\n    newList.splice(deleteIndex, 1);\n\n    setTimersList(newList);\n  };\n\n  const onEnter = (event) => {\n    if (event.key === 'Enter') {\n      addTimer();\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"timer\">\n        <div className=\"timer__set\">\n          <input\n            className=\"timer__name\"\n            type=\"text\"\n            placeholder=\"Enter tracker name\"\n            value={inputTimerName}\n            onChange={handleName}\n            onKeyPress={onEnter}\n          />\n          <button\n            className=\"timer__add\"\n            type=\"button\"\n            onClick={addTimer}\n          >\n            <img src={addPic} alt=\"add timer\" />\n          </button>\n        </div>\n\n        {timersList.map((timerObj) => {\n          const {\n            name,\n            id,\n          } = timerObj;\n\n          return (\n            <Timer\n              name={name}\n              id={id}\n              deleteTimer={deleteTimer}\n              key={id}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport const useLocalStorage = (key) => {\n  let initialValue = localStorage.getItem(key)\n    ? JSON.parse(localStorage.getItem(key))\n    : [];\n\n  localStorage.setItem(key, JSON.stringify(initialValue));\n\n  const [value, setValue] = useState(initialValue);\n\n  const addValue = (newValue) => {\n    setValue(newValue);\n    initialValue = newValue;\n    localStorage.setItem(key, JSON.stringify(initialValue));\n  };\n\n  return [value, addValue];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}